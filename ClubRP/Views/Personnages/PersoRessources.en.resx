<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AC" xml:space="preserve">
    <value>AC</value>
  </data>
  <data name="ACBonus" xml:space="preserve">
    <value>AC bonus</value>
  </data>
  <data name="Alignement" xml:space="preserve">
    <value>Alignment</value>
  </data>
  <data name="Appraise" xml:space="preserve">
    <value>Appraise</value>
  </data>
  <data name="ArmureAC" xml:space="preserve">
    <value>Armor's AC</value>
  </data>
  <data name="BaB" xml:space="preserve">
    <value>BaB</value>
  </data>
  <data name="BaBBonus" xml:space="preserve">
    <value>BaB bonus</value>
  </data>
  <data name="Balance" xml:space="preserve">
    <value>Balance</value>
  </data>
  <data name="Bluff" xml:space="preserve">
    <value>Bluff</value>
  </data>
  <data name="BouclierAC" xml:space="preserve">
    <value>Shield's AC</value>
  </data>
  <data name="Charisme" xml:space="preserve">
    <value>Charisma</value>
  </data>
  <data name="Classe" xml:space="preserve">
    <value>Class</value>
  </data>
  <data name="Climb" xml:space="preserve">
    <value>Climb</value>
  </data>
  <data name="Concentration" xml:space="preserve">
    <value>Concentration</value>
  </data>
  <data name="Constitution" xml:space="preserve">
    <value>Constitution</value>
  </data>
  <data name="Craft1" xml:space="preserve">
    <value>Craft</value>
  </data>
  <data name="Craft1Nom" xml:space="preserve">
    <value>Craft name</value>
  </data>
  <data name="Craft2" xml:space="preserve">
    <value>Craft</value>
  </data>
  <data name="Craft2Nom" xml:space="preserve">
    <value>Craft name</value>
  </data>
  <data name="Craft3" xml:space="preserve">
    <value>Craft</value>
  </data>
  <data name="Craft3Nom" xml:space="preserve">
    <value>Craft name</value>
  </data>
  <data name="Crit" xml:space="preserve">
    <value>Critical</value>
  </data>
  <data name="Crit2" xml:space="preserve">
    <value>Critical</value>
  </data>
  <data name="Decipher" xml:space="preserve">
    <value>Decipher script</value>
  </data>
  <data name="Degats" xml:space="preserve">
    <value>Damage</value>
  </data>
  <data name="Degats2" xml:space="preserve">
    <value>Damage</value>
  </data>
  <data name="Deplacement" xml:space="preserve">
    <value>Movement speed</value>
  </data>
  <data name="DetailsArme" xml:space="preserve">
    <value>Details</value>
  </data>
  <data name="DetailsArme2" xml:space="preserve">
    <value>Details</value>
  </data>
  <data name="DetailsArmure" xml:space="preserve">
    <value>Details</value>
  </data>
  <data name="DetailsBouclier" xml:space="preserve">
    <value>Details</value>
  </data>
  <data name="Dexterite" xml:space="preserve">
    <value>Dexterity</value>
  </data>
  <data name="Diplomacy" xml:space="preserve">
    <value>Diplomacy</value>
  </data>
  <data name="DisableDevice" xml:space="preserve">
    <value>Disable device</value>
  </data>
  <data name="Disguise" xml:space="preserve">
    <value>Disguise</value>
  </data>
  <data name="EscapeArtist" xml:space="preserve">
    <value>Escape artist</value>
  </data>
  <data name="Experience" xml:space="preserve">
    <value>Experience</value>
  </data>
  <data name="FlatFooted" xml:space="preserve">
    <value>Flat footed</value>
  </data>
  <data name="Force" xml:space="preserve">
    <value>Strength</value>
  </data>
  <data name="Forgery" xml:space="preserve">
    <value>Forgery</value>
  </data>
  <data name="GatherInfo" xml:space="preserve">
    <value>Gather informations</value>
  </data>
  <data name="Gold" xml:space="preserve">
    <value>Gold pieces</value>
  </data>
  <data name="HandleAnimal" xml:space="preserve">
    <value>Handle animals</value>
  </data>
  <data name="Heal" xml:space="preserve">
    <value>Heal</value>
  </data>
  <data name="Hide" xml:space="preserve">
    <value>Hide</value>
  </data>
  <data name="Hit" xml:space="preserve">
    <value>Hit</value>
  </data>
  <data name="Hit2" xml:space="preserve">
    <value>Hit</value>
  </data>
  <data name="HP" xml:space="preserve">
    <value>HP</value>
  </data>
  <data name="InitiativeBonus" xml:space="preserve">
    <value>Initiative bonus</value>
  </data>
  <data name="Initiative" xml:space="preserve">
    <value>Initiative</value>
  </data>
  <data name="Intelligence" xml:space="preserve">
    <value>Intelligence</value>
  </data>
  <data name="Intimidate" xml:space="preserve">
    <value>Intimidate</value>
  </data>
  <data name="Jump" xml:space="preserve">
    <value>Jump</value>
  </data>
  <data name="Knowledge1" xml:space="preserve">
    <value>Knowledge</value>
  </data>
  <data name="Knowledge1Nom" xml:space="preserve">
    <value>Knowledge name</value>
  </data>
  <data name="Knowledge2" xml:space="preserve">
    <value>Knowledge</value>
  </data>
  <data name="Knowledge2Nom" xml:space="preserve">
    <value>Knowledge name</value>
  </data>
  <data name="Knowledge3" xml:space="preserve">
    <value>Knowledge</value>
  </data>
  <data name="Knowledge3Nom" xml:space="preserve">
    <value>Knowledge name</value>
  </data>
  <data name="Knowledge4" xml:space="preserve">
    <value>Knowledge</value>
  </data>
  <data name="Knowledge4Nom" xml:space="preserve">
    <value>Knowledge name</value>
  </data>
  <data name="Knowledge5" xml:space="preserve">
    <value>Knowledge</value>
  </data>
  <data name="Knowledge5Nom" xml:space="preserve">
    <value>Knowledge name</value>
  </data>
  <data name="Listen" xml:space="preserve">
    <value>Listen</value>
  </data>
  <data name="Lutte" xml:space="preserve">
    <value>Grapple</value>
  </data>
  <data name="LutteBonus" xml:space="preserve">
    <value>Grapple bonus</value>
  </data>
  <data name="Malus" xml:space="preserve">
    <value>Malus</value>
  </data>
  <data name="MalusBouclier" xml:space="preserve">
    <value>Shield's malus</value>
  </data>
  <data name="MonterNiveau" xml:space="preserve">
    <value>Level up</value>
  </data>
  <data name="MoveSilently" xml:space="preserve">
    <value>Move silently</value>
  </data>
  <data name="Munition" xml:space="preserve">
    <value>Ammunition</value>
  </data>
  <data name="Munition2" xml:space="preserve">
    <value>Ammunition</value>
  </data>
  <data name="NaturalAC" xml:space="preserve">
    <value>Natural AC</value>
  </data>
  <data name="Niveau" xml:space="preserve">
    <value>Level</value>
  </data>
  <data name="NomArme" xml:space="preserve">
    <value>Main weapon</value>
  </data>
  <data name="NomArme2" xml:space="preserve">
    <value>Side weapon</value>
  </data>
  <data name="NomArmure" xml:space="preserve">
    <value>Armor</value>
  </data>
  <data name="NomBouclier" xml:space="preserve">
    <value>Shield</value>
  </data>
  <data name="NomPerso" xml:space="preserve">
    <value>Character's name</value>
  </data>
  <data name="Note" xml:space="preserve">
    <value>Notes</value>
  </data>
  <data name="OpenLock" xml:space="preserve">
    <value>Open lock</value>
  </data>
  <data name="Perform1" xml:space="preserve">
    <value>Perform</value>
  </data>
  <data name="Perform1Nom" xml:space="preserve">
    <value>Perform name</value>
  </data>
  <data name="Perform2" xml:space="preserve">
    <value>Perform</value>
  </data>
  <data name="Perform2Nom" xml:space="preserve">
    <value>Perform name</value>
  </data>
  <data name="Profession1" xml:space="preserve">
    <value>Perform</value>
  </data>
  <data name="Profession1Nom" xml:space="preserve">
    <value>Perform name</value>
  </data>
  <data name="Profession2" xml:space="preserve">
    <value>Profession</value>
  </data>
  <data name="Profession2Nom" xml:space="preserve">
    <value>Profession name</value>
  </data>
  <data name="Race" xml:space="preserve">
    <value>Race</value>
  </data>
  <data name="ReductionDegat" xml:space="preserve">
    <value>Damage reduction</value>
  </data>
  <data name="Reflexe" xml:space="preserve">
    <value>Reflex</value>
  </data>
  <data name="ReflexeBonus" xml:space="preserve">
    <value>Reflex bonus</value>
  </data>
  <data name="ResistanceSort" xml:space="preserve">
    <value>Spell resistance</value>
  </data>
  <data name="Ride" xml:space="preserve">
    <value>Ride</value>
  </data>
  <data name="Sagesse" xml:space="preserve">
    <value>Wisdom</value>
  </data>
  <data name="Search" xml:space="preserve">
    <value>Search</value>
  </data>
  <data name="SenseMotive" xml:space="preserve">
    <value>Sense Motive</value>
  </data>
  <data name="SleightOfHand" xml:space="preserve">
    <value>Sleight of hand</value>
  </data>
  <data name="Spellcraft" xml:space="preserve">
    <value>Spellcraft</value>
  </data>
  <data name="Spot" xml:space="preserve">
    <value>Spot</value>
  </data>
  <data name="Survival" xml:space="preserve">
    <value>Survival</value>
  </data>
  <data name="Swim" xml:space="preserve">
    <value>Swim</value>
  </data>
  <data name="TouchAC" xml:space="preserve">
    <value>Touch AC</value>
  </data>
  <data name="Tumble" xml:space="preserve">
    <value>Tumble</value>
  </data>
  <data name="TypeArmure" xml:space="preserve">
    <value>Armor type</value>
  </data>
  <data name="UMD" xml:space="preserve">
    <value>Use magic devices</value>
  </data>
  <data name="UseRope" xml:space="preserve">
    <value>Use Ropes</value>
  </data>
  <data name="Vigueur" xml:space="preserve">
    <value>Fortitude</value>
  </data>
  <data name="VigueurBonus" xml:space="preserve">
    <value>Fortitude Bonus</value>
  </data>
  <data name="VoirFiche" xml:space="preserve">
    <value>View character's sheet</value>
  </data>
  <data name="Volonte" xml:space="preserve">
    <value>Will</value>
  </data>
  <data name="VolonteBonus" xml:space="preserve">
    <value>Will bonus</value>
  </data>
  <data name="Armes" xml:space="preserve">
    <value>Weapons</value>
  </data>
  <data name="Armures" xml:space="preserve">
    <value>Armors</value>
  </data>
  <data name="Combat" xml:space="preserve">
    <value>Combat</value>
  </data>
  <data name="Defence" xml:space="preserve">
    <value>Defence</value>
  </data>
  <data name="Informations" xml:space="preserve">
    <value>Informations</value>
  </data>
  <data name="Saves" xml:space="preserve">
    <value>Saves</value>
  </data>
  <data name="Skills" xml:space="preserve">
    <value>Skills</value>
  </data>
  <data name="Stats" xml:space="preserve">
    <value>Stats</value>
  </data>
</root>